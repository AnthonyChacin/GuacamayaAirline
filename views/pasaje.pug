extends base
block content
  .container.pt-4

    - if(asientosDisponibles)
      - if(tipoAsiento.Clase == 'ClaseEconomica')
        h2.text-center Asientos de clase económica, #{tipoAsiento.CantAsientos}
      - else
        h2.text-center Asientos de primera clase, #{tipoAsiento.CantAsientos}  
      div.row
        div(style="float:left").col-2
          div(style="width:3rem; height: 3rem").btn.bg-danger
          b(style="visibility: hidden") ...
          b Ocupado
        div(style="float:left").col-2
          div(style="width:3rem; height: 3rem").btn.btn-outline-success
          b(style="visibility: hidden") ...
          b Disponible
      h2.mt-5    
      div.row
        - for(let i = 0; i < asientosDisponibles.length; i++)
          div.col-1.mt-1
            - if (asientosDisponibles[i].Asiento == 0)
              form(action=`/pasaje/asignarAsiento/${asientosDisponibles[i].Numero}-${IdPasaje}`,method="POST")
                button(style="width:4.5rem;" type='submit').btn.btn-outline-success #{asientosDisponibles[i].Numero}
                  img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/91605-200.png", alt="asiento", style="width:3rem; height: 3rem")
            - else
              form
                button(style="width:4.5rem;").btn.bg-danger.text-light #{asientosDisponibles[i].Numero}
                  img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/91605-200.png", alt="asiento", style="width:3rem; height: 3rem")
   
    - if (reservaUpdate && !asientosDisponibles)
      div.row
        div.col-6
          h4.mt-5 Modificar reserva
          div.card.bg-dark
            div.card-body.text-white 
              form(action='/pasaje/updateReserva/' method="POST")
                .form-group
                  label(for='IdComprador') Comprador
                  select#IdComprador.form-control(type='select' name='IdComprador' required).custom-select
                    - for (let i = 0; i < clientes.length; i++)
                      option(value=`${clientes[i].IdPersona}` selected=(reservaUpdate.IdComprador == clientes[i].IdPersona)) (#{clientes[i].Pasaporte}) #{clientes[i].Apellido}, #{clientes[i].Nombre} 
                .form-group
                  label(for='FechaReserva') Fecha de la reserva
                  input#FechaReserva.form-control(type='date' value=`${reservaUpdate.FechaReserva}` name='FechaReserva' required)
                .form-group
                  label(for='MetodoPago') Método de pago
                  select#MetodoPago.form-control(type='select' name='MetodoPago' required).custom-select
                    option(value="Credito" selected=(reservaUpdate.MetodoPago == 'Credito')) Tarjeta de crédito
                    option(value="Debito" selected=(reservaUpdate.MetodoPago == 'Debito')) Tarjeta de débito
                    option(value="Transferencia" selected=(reservaUpdate.MetodoPago == 'Transferencia')) Transferencia electrónica
                    option(value="Efectivo" selected=(reservaUpdate.MetodoPago == 'Efectivo')) Efectivo
                button.btn.btn-danger(type='submit') Modificar

    - if (!pasajeUpdate && !reservaUpdate && !asientosDisponibles)
      h2.text-center Reservas
      .row.mt-5
        .col-12
          table.table.bg-white
            thead
              tr.tr.bg-dark.text-white
                th(scope='col') ID
                th(scope='col') Comprador
                th(scope='col') Fecha de la reserva
                th(scope='col') Método de pago
                th(scope='col') Total a pagar
                th(scope='col')
            tbody
            - for (var i = 0; i < reservas.length; i++)
              tr
                th #{reservas[i].IdReserva}
                - for(let j = 0; j < clientes.length; j++)
                  - if (reservas[i].IdComprador == clientes[j].IdPersona)
                    td #{clientes[j].Pasaporte}
                td #{reservas[i].FechaReserva}
                td #{reservas[i].MetodoPago}
                td $#{reservas[i].TotalPagar}
                td
                  form(action=`/pasaje/reserva/${reservas[i].IdReserva}`,method="GET")
                    button.btn.btn-outline-dark(type='submit') Detalles
    - if (!pasajeUpdate && !reservaUpdate && !asientosDisponibles)
      h2.text-center Pasajes
      .row.mt-5
        .col-12
          table.table.bg-white
            thead
              tr.tr.bg-dark.text-white
                th(scope='col') ID
                th(scope='col') Estado
                th(scope='col') Reserva
                th(scope='col') Pasajero
                th(scope='col') Vuelo reservado
                th(scope='col') Vuelo abordado
                th(scope='col') Tarifa
                th(scope='col') Piezas de equipaje
                th(scope='col') Asiento
                th(scope='col') Tipo de pasaje
                th(scope='col')
                th(scope='col')
            tbody
            - for (var i = 0; i < pasajes.length; i++)
              tr(style="font-size:12px")
                th #{pasajes[i].IdPasaje}
                td #{pasajes[i].Estado}
                - for (let j = 0; j < reservas.length; j++)
                  - for (let k = 0; k < clientes.length; k++)
                    - if (clientes[k].IdPersona == reservas[j].IdComprador && reservas[j].IdReserva == pasajes[i].IdReserva)
                      td #{reservas[j].IdReserva} - (#{clientes[k].Pasaporte}) #{clientes[k].Apellido}, #{clientes[k].Nombre} - #{reservas[j].FechaReserva}
                - for(let j = 0; j < clientes.length; j++)
                  - if (pasajes[i].IdPasajero == clientes[j].IdPersona)
                    td (#{clientes[j].Pasaporte}) #{clientes[j].Apellido}, #{clientes[j].Nombre} 
                - for (let j = 0; j < vuelos.length; j++)
                    -for(let k = 0; k < rutas.length; k++) 
                      - if (vuelos[j].EstatusVuelo == 'A tiempo' && rutas[k].IdRuta == vuelos[j].IdRuta && vuelos[j].IdVuelo == pasajes[i].IdVueloReservado)
                        td #{vuelos[j].IdVuelo} - (#{rutas[k].Origen} , #{rutas[k].Destino}) - #{vuelos[j].FechaSalida}
                - if(pasajes[i].IdVueloAbordado == null)
                  td Pasaje no ha sido usado
                - else
                  - for (let j = 0; j < vuelos.length; j++)
                    -for(let k = 0; k < rutas.length; k++) 
                      - if (vuelos[j].EstatusVuelo == 'A tiempo' && rutas[k].IdRuta == vuelos[j].IdRuta && vuelos[j].IdVuelo == pasajes[i].IdVueloAbordado)
                        td #{vuelos[j].IdVuelo} - (#{rutas[k].Origen} , #{rutas[k].Destino}) - #{vuelos[j].FechaSalida} 
                - for (let j = 0; j < tarifas.length; j++)
                  - if (tarifas[j].IdTarifa == pasajes[i].IdTarifa)
                    td #{tarifas[j].IdTarifa} - #{tarifas[j].Clase}
                td #{pasajes[i].PiezasEquipaje}
                - if (pasajes[i].Asiento == null)
                  td
                    form(action=`/pasaje/buscarAsientos/${pasajes[i].IdPasaje}-${pasajes[i].IdVueloReservado}-${pasajes[i].IdTarifa}`,method="GET")
                      button.btn.btn-outline-info(type='submit') Asignar
                - else
                  td #{pasajes[i].Asiento}
                - if(pasajes[i].EsIda == 1)
                  td Ida
                - else
                  td Ida y Vuelta
                td
                  form(action=`/pasaje/${pasajes[i].IdPasaje}`,method="GET")
                    button.btn.btn-outline-dark(type='submit') Detalles
                td
                  form(action=`/pasaje/delete/${pasajes[i].IdPasaje}`,method="POST")
                    button.btn.btn-outline-danger(type='submit') Eliminar
      - if (!pasajeUpdate && !asientosDisponibles)
        div.row
          div.col-6
            h4.mt-5 Registrar reserva
            div.card.bg-dark
                div.card-body.text-white 
                  form(action='/pasaje/createReserva/' method="POST")
                    .form-group
                        label(for='IdComprador') Comprador
                        select#IdComprador.form-control(type='select' name='IdComprador' required).custom-select
                          option(value='' selected) ...
                            - for (let i = 0; i < clientes.length; i++)
                              option(value=`${clientes[i].IdPersona}`) (#{clientes[i].Pasaporte}) #{clientes[i].Apellido}, #{clientes[i].Nombre} 
                    .form-group
                        label(for='FechaReserva') Fecha de la reserva
                        input#FechaReserva.form-control(type='date' name='FechaReserva' required)
                    .form-group
                        label(for='MetodoPago') Método de pago
                        select#MetodoPago.form-control(type='select' name='MetodoPago' required).custom-select
                            option(value="" selected) ...
                            option(value="Credito") Tarjeta de crédito
                            option(value="Debito") Tarjeta de débito
                            option(value="Transferencia") Transferencia electrónica
                            option(value="Efectivo") Efectivo
                    button.btn.btn-danger(type='submit') Registrar
          div.col-6
            h4.mt-5 Agregar pasajes a reservas
            div.card.bg-dark
                div.card-body.text-white 
                  form(action='/pasaje/createPasaje/' method="POST")
                    .form-group
                        label(for='Estado') Estado
                        select#Estado.form-control(type='select' name='Estado' required).custom-select
                            option(value="Reservado" selected) Reservado
                            option(value="Comprado") Comprado
                    .form-group
                        label(for='IdReserva') Reserva
                        select#IdReserva.form-control(type='select' name='IdReserva' required).custom-select
                          option(value='' selected) ...
                            - for (let i = 0; i < reservas.length; i++)
                              - for (let j = 0; j < clientes.length; j++)
                                - if (clientes[j].IdPersona == reservas[i].IdComprador)
                                  option(value=`${reservas[i].IdReserva}`) #{reservas[i].IdReserva} - (#{clientes[j].Pasaporte}) #{clientes[j].Apellido}, #{clientes[j].Nombre} - #{reservas[i].FechaReserva}
                    .form-group
                        label(for='IdPasajero') Pasajero
                        select#IdPasajero.form-control(type='select' name='IdPasajero' required).custom-select
                          option(value='' selected) ...
                            - for (let i = 0; i < clientes.length; i++)
                              option(value=`${clientes[i].IdPersona}`) (#{clientes[i].Pasaporte}) #{clientes[i].Apellido}, #{clientes[i].Nombre} 
                    .form-group
                        label(for='IdVueloReservado') Vuelo reservado
                        select#IdVueloReservado.form-control(type='select' name='IdVueloReservado' required).custom-select
                          option(value='' selected) ...
                            - for (let i = 0; i < vuelos.length; i++)
                              -for(let j = 0; j < rutas.length; j++) 
                                - if (vuelos[i].EstatusVuelo == 'A tiempo' && rutas[j].IdRuta == vuelos[i].IdRuta)
                                  option(value=`${vuelos[i].IdVuelo}`) #{vuelos[i].IdVuelo} - (#{rutas[j].Origen} , #{rutas[j].Destino}) - #{vuelos[i].FechaSalida} 
                    .form-group
                        label(for='IdTarifa') Tarifa
                        select#IdTarifa.form-control(type='select' name='IdTarifa' required).custom-select
                          option(value='' selected) ...
                            - for (let i = 0; i < tarifas.length; i++)
                              option(value=`${tarifas[i].IdTarifa}`) #{tarifas[i].IdTarifa} - #{tarifas[i].Clase}
                    .form-group
                        label(for='PiezasEquipaje') Cantidad de piezas de equipaje
                        input#PiezasEquipaje.form-control(type='number' name='PiezasEquipaje' required)
                    .form-group
                        label(for='EsIda') Tipo de pasaje
                        select#EsIda.form-control(type='select' name='EsIda' required).custom-select
                            option(value=1 selected) Ida
                            option(value=0) Ida y Vuelta 
                    button.btn.btn-danger(type='submit') Agregar
    - if (pasajeUpdate && !asientosDisponibles)
        div.row
            div.col-6
              h4.mt-5 Modificar pasaje
              div.card.bg-dark
                div.card-body.text-white 
                  form(action=`/pasaje/update/${pasajeUpdate.IdPasaje}` method="POST")
                    .form-group
                        label(for='Estado') Estado
                        select#Estado.form-control(type='select' name='Estado' required).custom-select
                            option(value="Reservado" selected=(pasajeUpdate == 'Reservado')) Reservado
                            option(value="Comprado" selected=(pasajeUpdate == 'Comprado')) Comprado
                    .form-group
                        label(for='IdReserva') Reserva
                        select#IdReserva.form-control(type='select' name='IdReserva' required).custom-select
                            - for (let i = 0; i < reservas.length; i++)
                              - for (let j = 0; j < clientes.length; j++)
                                - if (clientes[j].IdPersona == reservas[i].IdComprador)
                                  option(value=`${reservas[i].IdReserva}` selected=(pasajeUpdate.IdReserva == reservas[i].IdReserva)) #{reservas[i].IdReserva} - (#{clientes[j].Pasaporte}) #{clientes[j].Apellido}, #{clientes[j].Nombre} - #{reservas[i].FechaReserva}
                    .form-group
                        label(for='IdPasajero') Pasajero
                        select#IdPasajero.form-control(type='select' name='IdPasajero' required).custom-select
                            - for (let i = 0; i < clientes.length; i++)
                              option(value=`${clientes[i].IdPersona}` selected=(pasajeUpdate.IdPasajero == clientes[i].IdPersona)) (#{clientes[i].Pasaporte}) #{clientes[i].Apellido}, #{clientes[i].Nombre} 
                    .form-group
                        label(for='IdVueloReservado') Vuelo reservado
                        select#IdVueloReservado.form-control(type='select' name='IdVueloReservado' required).custom-select
                            - for (let i = 0; i < vuelos.length; i++)
                              -for(let j = 0; j < rutas.length; j++) 
                                - if (vuelos[i].EstatusVuelo == 'A tiempo' && rutas[j].IdRuta == vuelos[i].IdRuta)
                                  option(value=`${vuelos[i].IdVuelo}` selected=(pasajeUpdate.IdVueloReservado == vuelos[i].IdVuelo)) #{vuelos[i].IdVuelo} - (#{rutas[j].Origen} , #{rutas[j].Destino}) - #{vuelos[i].FechaSalida}   
                    .form-group
                        label(for='IdTarifa') Tarifa
                        select#IdTarifa.form-control(type='select' name='IdTarifa' required).custom-select
                            - for (let i = 0; i < tarifas.length; i++)
                              option(value=`${tarifas[i].IdTarifa}` selected=(pasajeUpdate.IdTarifa == tarifas[i].IdTarifa)) #{tarifas[i].IdTarifa} - #{tarifas[i].Clase} 
                    .form-group
                        label(for='PiezasEquipaje') Cantidad de piezas de equipaje
                        input#PiezasEquipaje.form-control(type='number' value=`${pasajeUpdate.PiezasEquipaje}` name='PiezasEquipaje' required)
                    .form-group
                        label(for='EsIda') Tipo de pasaje
                        select#EsIda.form-control(type='select' name='EsIda' required).custom-select
                            option(value=1 selected=(pasajeUpdate.EsIda == 1)) Ida
                            option(value=0 selected=(pasajeUpdate.EsIda == 0)) Ida y Vuelta
                    button.btn.btn-danger(type='submit') Modificar    
              h4.mt-5          
              a.btn.btn-dark(type="button" href="/pasaje/") Volver 